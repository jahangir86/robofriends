{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxB,OACG,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEMA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACA,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCSVC,EAjBG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCbI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YC+CJC,G,wDA3CX,aAAc,IAAD,8BACT,gBAkBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAlB1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAqB,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAQhC,WAAU,IAAD,OACCC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC5C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAGpE,OAAiC,IAA7BH,KAAKP,MAAMvB,OAAOmC,OACX,yCAGX,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ6B,a,GApCZO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.aeb1b708.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ({ name, email, id }) => {\n     return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='photo' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nconst Cardlist = ({ robots }) => {\n    return (\n        <div>\n          {\n              robots.map((user, i) => {\n                return (\n                <Card \n                    key={i} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email}\n                />\n                );\n            })\n          }\n        </div>\n    )\n}\n\nexport default Cardlist","import React from 'react';\n\nconst Searchbox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue' \n                type='search' \n                placeholder='search robots'\n                onChange = {searchChange}\n\n            /> \n        </div>\n    )\n}\n\n\n\n\nexport default Searchbox","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll'\nimport './App.css';\n\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> {\n            return response.json();\n        })\n        .then(users => {\n            this.setState({ robots: users})\n        });\n    }\n\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value})\n    }\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        //another way of writing this condition below: if (!robots.length) {\n        if (this.state.robots.length === 0) {\n            return <h1>Loading</h1>\n        } else { \n        return (\n        <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <Searchbox searchChange={this.onSearchChange} />\n            <Scroll>\n            <Cardlist robots={filteredRobots}/>\n            </Scroll>\n        </div>\n        );\n    }\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}